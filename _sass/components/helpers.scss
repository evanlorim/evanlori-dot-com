@use "bulma/sass/utilities/initial-variables" as iv;
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/css-variables" as cv;
@use "patterns" as *;

$border-color: iv.$grey-dark !default;
$shadow-color: iv.$grey-dark !default;
$widths: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;

@each $x in $widths {
	.has-border-#{$x} {
		border-width: $x * 1px !important;
		border-style: solid !important;
		border-color: $border-color;
	}

	.has-border-top-#{$x} {
		border-top-width: $x * 1px !important;
		border-top-style: solid !important;
		border-color: $border-color;
	}

	.has-border-bottom-#{$x} {
		border-bottom-width: $x * 1px !important;
		border-bottom-style: solid !important;
		border-color: $border-color;
	}
	@each $y in $widths {
		$xpx: $x * 1px;
		$ypx: $y * 1px;
		.has-shadow-#{$x}-#{$y} {
			filter: drop-shadow($xpx $ypx $shadow-color);
		}
		@each $name, $color in dv.$colors {
			$color: hsl(
				#{cv.getVar($name, "", "-h")},
				#{cv.getVar($name, "", "-s")},
				#{cv.getVar($name, "", "-l")}
			);

			.has-shadow-#{$x}-#{$y}-#{$name} {
				filter: drop-shadow($xpx $ypx $color);
			}
		}
		@each $name, $color in dv.$shades {
			$color: hsl(
				#{cv.getVar($name, "", "-h")},
				#{cv.getVar($name, "", "-s")},
				#{cv.getVar($name, "", "-l")}
			);

			.has-shadow-#{$x}-#{$y}-#{$name} {
				filter: drop-shadow($xpx $ypx $color);
			}
		}
	}
}

@each $name, $color in dv.$colors {
	$color: hsl(
		#{cv.getVar($name, "", "-h")},
		#{cv.getVar($name, "", "-s")},
		#{cv.getVar($name, "", "-l")}
	);

	.has-border-#{$name} {
		border-color: $color;
	}

	.has-border-top-#{$name} {
		border-top-color: $color;
	}

	.has-border-bottom-#{$name} {
		border-bottom-color: $color;
	}
}

@each $name, $color in dv.$shades {
	$color: hsl(
		#{cv.getVar($name, "", "-h")},
		#{cv.getVar($name, "", "-s")},
		#{cv.getVar($name, "", "-l")}
	);

	.has-border-#{$name} {
		border-color: $color;
	}

	.has-border-top-#{$name} {
		border-top-color: $color;
	}

	.has-border-bottom-#{$name} {
		border-bottom-color: $color;
	}
}

@each $name, $styles in $patterns {
	.has-background-#{$name} {
		@each $prop, $val in $styles {
			#{$prop}: $val;
		}
	}
	@each $x in $widths {
		@each $y in $widths {
			.has-shadow-#{$x}-#{$y}-#{$name}:before {
				content: "";
				position: absolute;
				inset: calc($x * .5px) calc($y * .5px);
				transform: translate($x * 2px, $y * 2px);
				z-index: -1;
				border-radius: inherit;
				@each $prop, $val in $styles {
					#{$prop}: $val;
				}
			}
		}
	}
}
